@model Team9_winxshop.Models.SanPham

@{
    ViewBag.Title = "Create";
}

<h2>Create new product</h2>


@using (Html.BeginForm("Create", "SanPhams", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="form-group col-md-6">
                <label>Mã sản phẩm</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaSP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaSP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                <label>Loại sản phẩm</label>
                <div class="col-md-10" style="max-width: 66%">
                    @Html.DropDownList("MaLoaiSP", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MaLoaiSP, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label>Tên sản phẩm</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Size</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Số lượng</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Đơn giá</label>
            <div class="col-md-10">
                <div class="input-group">
                    @Html.EditorFor(model => model.DonGia, new { htmlAttributes = new { @class = "form-control" } })
                    <div class="input-group-append">
                        <span class="input-group-text">vnđ</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label>Màu</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mau, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mau, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label>Hình ảnh</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-lg-4">
                <input type="submit" value="Create" style="border-radius: 10px; height: 40px; width: 90px"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function readPicture(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('img#Picture').attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
    
}
